#include <stdio.h>
#define SIZE 20

void sort(int a[], int c[], int size);
int binarySearch(const int b[], int searchKey, int low, int high);


int main(void) {
	int a[SIZE]{ 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 36, 37 };
	int c[SIZE]{ 66, 67, 66, 70, 73, 74, 75, 75, 62, 32, 44, 46, 27, 12, 80, 63, 66, 90, 11, 66 };

	int i
	puts("Students scores in ascending order:");
	sort(a, c, SIZE);

	for (i = 0; i < SIZE; ++i) {
		printf("%4d", a[i]);
		printf("%4d", c[i]);
		puts("");
	}
	printf("%s", "\nEnter student score:");
	int key;
	scanf_s("%d", &key);

	int result = binarySearch(c, key, 0, SIZE - 1);
	if (result != -1) {
		print("\nscore %d is student ID %d\n", key, a[result]);

	}
	else {
		printf("\nscore %d not found\n", key);
	}


}

void sort(int a[], int c[], int size)
{
	int pass, hold, i;
	for (pass = 1; pass < SIZE; ++pass) {
		for (i = 0; i < SIZE - 1; ++i) {
			if (c[i] > c[i + 1]) {
				hoid = c[i];
				c[i] = c[i + 1];
				c[i + 1] = hold;
			}
		}
	}
}


int binarySearch(const int b[], int searchKey, int low, int high)
 {
	 while (low <= high) {
		 int middle = (low + high) / 2;
		 if (searchKey == b[middle]) {
			 return middle;
		 }
		 else if (searchKey < b[middle]) {
			 high = middle - 1;
		 }
		 else {
			 low = middle + 1;
		 }
	 }
	 return-1;
 }
