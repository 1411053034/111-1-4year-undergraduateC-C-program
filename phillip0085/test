題目 : 建立一個10*4陣列，將全班10人的學號，數學成績，計概成績放入陣列中(直接置於程式內)。
建立一個指標陣列，指標分別指向這十位同學的姓名的字串變數，
根據每個學生的平均成績，由大到小排序，印出美觀、大方的全班成績表(包含姓名、學號、成績、平均、名次)，
並印出最高平均成績與最低平均成績的同學和分數。
需使用排序、報表、中位數、取平均副程式，
資料交換需使用副程式p.322的swap( )副程式完成。



#include <stdio.h>
#define STUDENTS 10
#define EXAMS 4

void printArray(const char** name, int grades[][EXAMS], int pupils, int tests);
void average(int grades[][EXAMS], int pupils, int tests);
void sort(const char** name, int grades[][EXAMS], int size);
void swap(int* e1Ptr, int* e2Ptr);
int minmum(int grades[][EXAMS], int pupils, int tests);
int maxmum(int grades[][EXAMS], int pupils, int tests);

int main(void) {

    int studenGrades[STUDENTS][EXAMS] =
    { {11,90,85,0},
    {12,66,73,0},
    {13,65,45,0},
    {14,76,87,0},
    {15,98,53,0},
    {16,88,78,0},
    {17,65,58,0},
    {18,39,83,0},
    {19,76,79,0},
    {20,56,89,0} };
    

    const char* name[STUDENTS] =
    { "Alice",
     "Danny",
     "Tom",
     "Nina",
     "May",
     "Sindy",
     "Steven",
     "Ellen",
     "Nicole",
     "Tan" };


    int i, j;

    printf("原始成績:\n");
    printf("%s", "    [姓名]  [學號] [數學成績] [計概成績]\n");
    for (j = 0; j < 10; j++)
    {
        printf("%9s", name[j]);

        for (i = 0; i < EXAMS - 1; ++i) {
            printf("%8d", studenGrades[j][i]);
        }
        printf("\n");
    }


    puts("\n\n");

    average(studenGrades, STUDENTS, EXAMS);
    sort(name, studenGrades, STUDENTS);
    printf("依平均由高至低排列:\n");
    printArray(name, studenGrades, STUDENTS, EXAMS);

    printf("\n\n\n最高平均成績:%d,姓名:%s,學號:%d\n最低平均成績:%d,姓名:%s,學號:%d\n", maxmum(studenGrades, STUDENTS, EXAMS), name[0], studenGrades[0][0], minmum(studenGrades, STUDENTS, EXAMS), name[9], studenGrades[9][0]);


    float mid;
    mid = ((studenGrades[0][3] + studenGrades[STUDENTS - 1][3]) / 2);
    printf("中位數%.2f分\n", mid);

}


void sort(const char** name, int grades[][EXAMS], int size)
{
    const char* ptr;
    int pass, i;

    for (pass = 1; pass < size; ++pass) {

        for (i = 0; i < size - pass; ++i) {      

            if (grades[i][3] < grades[i + 1][3]) {
                ptr = name[i];
                name[i] = name[i + 1];
                name[i + 1] = ptr;
                swap(&grades[i][0], &grades[i + 1][0]);
                swap(&grades[i][1], &grades[i + 1][1]);
                swap(&grades[i][2], &grades[i + 1][2]);
                swap(&grades[i][3], &grades[i + 1][3]);
            }
        }
    }
}


void swap(int* e1Ptr, int* e2Ptr)
{
    int hold;
    hold = *e1Ptr;
    *e1Ptr = *e2Ptr;
    *e2Ptr = hold;
}



void printArray(const char** name, int grades[][EXAMS], int pupils, int tests) {
    printf("%s", "         [名次]     [姓名]      [學號]  [數學成績] [計概成績] [平均]");
    int row, column;
    for (row = 0; row < pupils; ++row) {
        printf("\nstudentGrades[%u] ", row + 1);
        printf("%9s", name[row]);

        for (column = 0; column < tests; ++column) {
           
            printf("%10d", grades[row][column]);
            
        }
    }
}


void average(int grades[][EXAMS], int pupils, int tests) {
    int total = 0, j, i;
    for (i = 0; i < pupils; ++i) {
        for (j = 1; j < EXAMS - 1; ++j) {
            total += grades[i][j];
        }
        grades[i][EXAMS - 1] = total / 2;
        total = 0;
    }
}



int minmum(int grades[][EXAMS], int pupils, int tests) {
    int lowGrade = 100, i, column, student;

    for (i = 0; i < pupils; ++i) {
        for (column = 0; column < tests; ++column) {
            if (grades[i][EXAMS - 1] < lowGrade) {
                lowGrade = grades[i][EXAMS - 1];
                student = grades[0][EXAMS - 1];
            }
        }
    }
    return lowGrade;
}


int maxmum(int grades[][EXAMS], int pupils, int tests) {
    int highGrade = 0, row, column, student;

    for (row = 0; row < pupils; ++row) {
        for (column = 0; column < tests; ++column) {
            if (grades[row][EXAMS - 1] > highGrade) {
                highGrade = grades[row][EXAMS - 1];
                student = grades[0][EXAMS - 1];
            }
        }
    }
    return highGrade;
}


