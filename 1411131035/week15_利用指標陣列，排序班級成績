#include <stdio.h>
#define SIZE 4
#define SZ 10

void sort(const char **name,int a[][SIZE], int size);
void swap(int* e1Ptr, int* e2Ptr);

int main(void)
{
    int key, result = 0, i, j;
    // initialize a
    int a[10][SIZE] = { {2,98,72,0},
                        {3,76,30,0},
                        {6,99,67,0},
                        {7,89,32,0},
                        {8,92,55,0},
                        {9,85,37,0},
                        {10,98,65,0},
                        {11,79,32,0},
                        {12,98,73,0},
                        {13,76,91,0}, };
    const char *name[SZ] = {
        "AA",
        "BB",
        "CC",
        "DD",
        "EE",
        "FF",
        "GG",
        "HH",
        "II",
        "JJ"
    };

    puts("Data items in original order");
    // output original array
    for (j = 0; j < 10; j++)
    {
        for (i = 1; i < SIZE - 1; ++i) {
            a[j][3] += a[j][i];
        }
    }

    for (j = 0; j < 10; j++)
    {
        for (i = 0; i < SIZE; ++i) {
            printf("%4d", a[j][i]);
        }
        printf("\n");
    }

    /*    printf("\n");
        for (i = 0; i < SIZE; ++i) {
            printf("%4d", a[1][i]);
        }
    */
    // bubble sort                                         
    // loop to control number of passes                    

    sort(name,a, SZ);

    puts("\nData items in ascending order");
    puts("\n名次 姓名 學號 分數1 分數2  總分");
    for (i = 0; i < SZ; ++i) {
        printf("%3d", i + 1);
        printf("%6s", name[i]);
        printf("%5d", a[i][0]);
        printf("%6d", a[i][1]);
        printf("%6d", a[i][2]);
        printf("%6d", a[i][3]);
        printf("\n");
    }


    printf("\n最高分平均成績:%4d", a[9][3] / 2);
    printf("\n最低分平均成績:%4d", a[0][3] / 2);
    printf("\n中位數成績:%4d", a[SZ / 2][3]);

}


void sort(const char **name,int a[][SIZE], int size)
{
    int hold, pass, i;
    const char *PP;
    for (pass = 1; pass < size; ++pass) {

        // loop to control number of comparisons per pass   
        for (i = 0; i < size - pass; ++i) {

            if (a[i][3] < a[i + 1][3]) {
                PP = name[i];
                name[i] = name[i+1];
                name[i+1] = PP;

                swap(&a[i][0], &a[i + 1][0]);
                swap(&a[i][1], &a[i + 1][1]);
                swap(&a[i][2], &a[i + 1][2]);
                swap(&a[i][3], &a[i + 1][3]);
            }
        }
    }

}

void swap(int* e1Ptr, int* e2Ptr)
{
    int hold;
    hold = *e1Ptr;
    *e1Ptr = *e2Ptr;
    *e2Ptr = hold;
}
