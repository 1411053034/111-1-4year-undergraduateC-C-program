題目:建立兩個大小為20的整數陣列，分別存放學生學號以對應的計概成績。寫一個排序副程式，將兩個陣列傳遞至副程式中，依照計概成績由小到大排序，由主程式印出排序後的結果，輸入學生計概成績，
用二元陣列搜尋找出該生的學號並印出他的學號與成績，若找不到則印出"找不到!"
#include <stdio.h>
#define SIZE20
void sort(int a[], int c[], int SIZE);
int binarySearch(const int b[], int searchKey, int low, int high);
int main(void)
{
    int i,key;
    int a[SIZE] = { 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 36, 37 };
    int c[SIZE] = { 66, 67, 66, 70, 73, 74, 75, 75, 62, 32, 44, 46, 27, 12, 80, 63, 66, 90, 11, 66 };
    
    puts("Data items in original order");
    for (i = 0; i < 10; ++i) {
        printf("%4d", a[i]);
    }
    printf("\n");
    for (i = 0; i < 10; ++i) {
        printf("%4d", c[i]);
    }
    sort(a, c, 10);
    puts("\n Data items in ascending order");


    for (i = 0; i < 10; ++i) {
        printf("%4d", a[i]);
    }
    printf("\n");
    for (i = 0; i < 10; ++i) {
        printf("%4d", c[i]);
    }
    puts("");

    printf("Input Score:");
    scanf_s("%d", &key);
    int result = binarySearch(a, key, 0, SIZE-1);
    if (result==-1)
    {
        printf("Score not be found");
     
    }
    else {
        printf("id=%d and score=%d", a[result], key);
    }
    
    
}

void sort(int a[], int c[], int SIZE) {
    int hold;
    for (unsigned int pass = 1; pass < SIZE; ++pass) {
        for (int i = 0; i < SIZE - pass; ++i) {
            if (c[i] > c[i + 1]) {
                hold = c[i];
                c[i] = c[i + 1];
                c[i + 1] = hold;
                hold = a[i];
                a[i] = a[i + 1];
                a[i + 1] = hold;
            }

        }
    }
}
int binarySearch(const int b[], int searchKey, int low, int high) {
    while (low <= high) {
        int middle = (low + high) / 2;
        if (searchKey == b[middle]) {
            return middle;
        }
        else if (searchKey < b[middle]) {
            high = middle - 1;
        }
        else {
            low = middle + 1;
        }
    }
    return -1;
}
