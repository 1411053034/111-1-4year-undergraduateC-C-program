題一:
題目:建立兩個大小為10的整數陣列，分別存放學生學號以對應的計概成績。寫一個排序副程式，將兩個陣列傳遞至副程式中，依照計概成績由小到大排序，由主程式印出排序後的結果。
#include <stdio.h>
#define SIZE 10
void swap(int* eptr1, int* eptr2);
void bubbleSort(int* const id, int* const sc, const int size);
int main(void)
{
	int i;
	int id[SIZE] = {10,11,12,13,14,15,16,17,18,19};
	int sc[SIZE] = {70,60,50,65,88,93,62,71,82,98};

	puts("\nThe oringinal answer:\n");

	for (i = 0; i < SIZE; i++) {
		printf("\n%4d", id[i]);
		printf("%4d", sc[i]);
	}
	bubbleSort(id,sc,SIZE);
	puts("\nThe new answer is:");
	for (i = 0; i < SIZE; i++) {
		printf("\n%4d", id[i]);
		printf("%4d", sc[i]);
	}

}
void bubbleSort(int * const id,int * const sc, const int size) {
	void swap(int* eptr1, int* eptr2);
	for (unsigned int pass = 0; pass < size - 1; ++pass) {
		for (int j = 0; j < size - 1; j++) {
			if (sc[j] > sc[j + 1]) {
				swap(&sc[j], &sc[j + 1]);
				swap(&id[j], &id[j + 1]);
			}
		}
	}
}


void swap(int* eptr1, int* eptr2) {
	int hold;
	hold = *eptr1;
	*eptr1 = *eptr2;
	*eptr2 = hold;
}


題二:
題目:建立兩個大小為10的整數陣列，分別存放學生學號以對應的計概成績。寫一個線性搜尋副程式，將兩個陣列以及想要搜尋的學號傳遞至副程式中，傳回學號所對應的計概成績，由主程式印出學號與成績。
#include <stdio.h>
#define SIZE 10
void swap(int* eptr1, int* eptr2);
void bubbleSort(int* const id, int* const sc, const int size);
int linearSearch(const int id[], int key, int size);
int main(void)
{
	int i,key;
	int id[SIZE] = { 10,11,12,13,14,15,16,17,18,19 };
	int sc[SIZE] = { 70,60,50,65,88,93,62,71,82,98 };

	puts("\nThe oringinal answer:\n");

	for (i = 0; i < SIZE; i++) {
		printf("\n%4d", id[i]);
		printf("%4d", sc[i]);
	}
	bubbleSort(id, sc, SIZE);
	puts("\nThe new answer is:");
	for (i = 0; i < SIZE; i++) {
		printf("\n%4d", id[i]);
		printf("%4d", sc[i]);
	}
	printf("Enter ID:");
	scanf_s("%d", &key);
	int index = linearSearch(id, key, SIZE);

		if (index != -1) {
			printf("ID=%d and Score=%d\n", id[index], sc[index]);
		}
		else {
			puts("Value not be found");
		}
	
}
void bubbleSort(int* const id, int* const sc, const int size) {
	void swap(int* eptr1, int* eptr2);
	for (unsigned int pass = 0; pass < size - 1; ++pass) {
		for (int j = 0; j < size - 1; j++) {
			if (sc[j] > sc[j + 1]) {
				swap(&sc[j], &sc[j + 1]);
				swap(&id[j], &id[j + 1]);
			}
		}
	}
}


void swap(int* eptr1, int* eptr2) {
	int hold;
	hold = *eptr1;
	*eptr1 = *eptr2;
	*eptr2 = hold;
}
int linearSearch(const int id[], int key, int size) {
	
	for (int n = 0; n < size; n++) {
		if (id[n] == key) {
			return n;
		}
	}
	return-1;
}
