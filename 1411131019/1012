// Fig. 5.3: fig05_03.c
// Creating and using a programmer-defined function.
#include <stdio.h> 

int facto(int); // function prototype 原型宣告 
double expo(int);
double power(int, int);
int main(void)

{
	int x;
	// loop 10 times and calculate and output square of x each time
	for (x = 1; x <= 10; ++x) {
		printf("%d  ", facto(x)); // function call
	}
	printf("\n value of e is : % lf", expo(x));
	puts("");
}
// square function definition returns the square of its parameter 
int facto(int y) // y is a copy of the argument to the function
{
	int result = 1, i;
	for (i = 1; i <= y; i++)
		result = result * i;
	return result; // returns the square of y as an int              
}

double expo(int y) // y is a copy of the argument to the function
{
	int result = 1, i;
	double expo = 1;
	for (i = 1; i <= y; i++) {
		result = result * i;
		expo = expo + (1.0 / result);

	}
	return expo; // returns the square of y as an int
}

double power(int x, int y)
{
	double z;
	printf("請輸入底數：");
		scanf_s("%d", &x);
	printf("請輸入指數：");
		scanf_s("%d", &y);
	z=power(x,y);
	
	return z;
}
