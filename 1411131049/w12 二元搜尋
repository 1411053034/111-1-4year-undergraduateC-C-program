#include <stdio.h>
#define SIZE 20 
void sort(int a[], int c[], int size);
int search(int b[],int key,int low,int high);
int main(void)
{
    int a[SIZE] = {12,13,14,15,16,17,19,21,22,23,24,26,27,28,29,31,32,33,36,37};
    int c[SIZE] = {66,67,66,70,73,74,75,75,62,32,44,46,27,12,80,63,66,90,11,66};
    int key,result;

    puts("Data items in original order");
    for (size_t i = 0; i < SIZE; ++i) {
        printf("%4d", a[i]);
    }
    printf("\n");
    for (size_t i = 0; i < SIZE; ++i) {
        printf("%4d", c[i]);
    }
                    
    
    sort(a, c, SIZE);
    puts("\nData items in ascending order");

    for (size_t i = 0; i < SIZE; ++i) {
        printf("%4d", a[i]);
    }
    printf("\n");
    for (size_t i = 0; i < SIZE; ++i) {
        printf("%4d", c[i]);
    }

    puts("");
    printf("%s","\nenter a score:");
	scanf("%d",&key);
    result = search(c,key,0,SIZE - 1);
    if (result < 0)
    {
    	printf("%d score not found",key);
	}
	else
	{
		printf("Student %d got %d score",a[result],key);
	}
}
void sort(int a[], int c[], int size)
{
	int hold;
	for (unsigned int pass = 1; pass < size; ++pass)
	{
		for (int i = 0; i < size - pass; ++i)
		{
		
			if (c[i] > c[i + 1])
			{
				hold = c[i];
				c[i] = c[i +1];
				c[i+1] = hold;
				hold = a[i];
				a[i] = a[i +1];
				a[i+1] = hold;
			}
		}
	}	
}
int search(int b[],int key,int low,int high){
	while(low <= high){
		int middle = (low+high)/2;
		if(key == b[middle]){
			return middle;
		}
		else if (key < b[middle]){
			high = middle-1;
		}
		else {
			low = middle + 1;
		}
	}
	return -1;
}
