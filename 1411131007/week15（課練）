題目 : 建立一個10*4陣列，將全班10人的學號，數學成績，計概成績放入陣列中(直接置於程式內)。
建立一個指標陣列，指標分別指向這十位同學的姓名的字串變數，
根據每個學生的平均成績，由大到小排序，印出美觀、大方的全班成績表(包含姓名、學號、成績、平均、名次)，
並印出最高平均成績與最低平均成績的同學和分數。
需使用排序、報表、中位數、取平均副程式，
資料交換需使用副程式p.322的swap( )副程式完成。

#include <stdio.h>
#define SIZE 4
#define stu 10
void sort(const char *name[] , int a[][SIZE], int size);
void swap(int* e1Ptr, int* e2Ptr);
int main(void)
{
    int key, result = 0, i, j;
    int a[10][SIZE] = { {2,87,72,0},
                        {3,76,32,0},
                        {6,98,67,0},
                        {7,89,40,0},
                        {8,64,55,0},
                        {9,89,70,0},
                        {10,30,65,0},
                        {11,99,65,0},
                        {12,66,71,0},
                        {13,76,91,0} };
    const char *name[10] =
        {"Alice",
         "Danny",
         "Tom",
         "Nina",
         "May",
         "Cindy",
         "Steven",a
         "Ellen",
         "Nicole",
         "Tan"};

    puts("Data items in original order");
    for (j = 0; j < 10; j++){
        for (i = 1; i < SIZE - 1; ++i) {
            a[j][3] += a[j][i];
        }
    }

    for (j = 0; j < 10; j++){
    	printf("%8s", name[j]);
        for (i = 0; i < SIZE; ++i) {
            printf("%4d", a[j][i]);
        }
        printf("\n");
    }

    sort(name, a, stu);
    puts("\nData items in ascending order");

    for (j = 0; j < 10; j++)
    {
        printf("%8s", name[j]);
        for (i = 0; i < SIZE; ++i) {
            printf("%4d", a[j][i]);
        }
        printf("\n");
    }
}


void sort (const char* name[], int a[][SIZE], int size)
{
    const char* ptr;
    int hold, pass, i;
    for (pass = 1; pass < size; ++pass) {  
        for (i = 0; i < size - pass; ++i) {         
            if (a[i][3] < a[i + 1][3]) {
                ptr = name[i];
                name[i] = name[i + 1];
                name[i + 1] = ptr;
                swap(&a[i][0], &a[i + 1][0]);
                swap(&a[i][1], &a[i + 1][1]);
                swap(&a[i][2], &a[i + 1][2]);
                swap(&a[i][3], &a[i + 1][3]);
            }
        }
    }
}

void swap (int* e1Ptr, int* e2Ptr)
{
    int hold;
    hold = *e1Ptr;
    *e1Ptr = *e2Ptr;
    *e2Ptr = hold;
}
