#include <stdio.h>
#define SIZE 20

void sort(int a[][SIZE], int size);
void swap(int *e1Ptr, int *e2Ptr);
int binarySearch(int c[], int searchKey, int low, int high);

int main(void)
{
    
    int a[2][SIZE] = {{ 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 36, 37 },
                      { 66, 67, 66, 70, 73, 74, 75, 75, 62, 32, 44, 46, 27, 12, 80, 63, 66, 90, 11, 66 }};
    int i, key;

    puts("Data items in original order");
    for (i = 0; i < SIZE; ++i) {
        printf("%4d", a[0][i]);
    }
    printf("\n");
    for (i = 0; i < SIZE; ++i) {
        printf("%4d", a[1][i]);
    }
    
    sort(a, SIZE);
    
    puts("\nData items in ascending order");
    for (i = 0; i < SIZE; ++i) {
        printf("%4d", a[0][i]);
    }
    printf("\n");
    for (i = 0; i < SIZE; ++i) {
        printf("%4d", a[1][i]);
    }
    puts("");
}

void sort(int a[][SIZE], int size) 
{
    int hold;
    for (unsigned int pass = 1; pass < size; ++pass) {
        for (int i = 0; i < size - pass; ++i) {
            if (a[1][i] > a[1][i + 1]) {
                swap (&a[1][i] , &a[1][i + 1]);
                swap (&a[0][i] , &a[0][i + 1]);
            }
        }
    }
}

void swap(int *e1Ptr, int *e2Ptr) 
{
    int hold = *e1Ptr;
    *e1Ptr = *e2Ptr;
    *e2Ptr = hold;	
}
