#include <stdio.h>
#define SIZE 5
#define stu 10
//int binarySearch(int b[], int searchKey, int low, int high);
void sort(int a[][SIZE], int size);
void swap(int* e1Ptr, int* e2Ptr);
// function main begins program execution
int main(void)
{
    int  result = 0, i, j;
    // initialize a
    int a[10][SIZE] = { {2,98,72,0,0},
                        {3,76,32,0,0},
                        {6,98,67,0,0},
                        {7,89,32,0,0},
                        {8,98,55,0,0},
                        {9,89,32,0,0},
                        {10,98,65,0,0},
                        {11,99,32,0,0},
                        {12,98,71,0,0},
                        {13,76,91,0,0}, };

    puts("Data items in original order");
    // output original array
    for (j = 0; j < 10; j++)
    {
        a[j][3] = a[j][1] + a[j][1];
    }

    for (j = 0; j < 10; j++)
    {
        for (i = 0; i < SIZE; ++i) {
            printf("%4d", a[j][i]);
        }
        printf("\n");
    }

    /*    printf("\n");
        for (i = 0; i < SIZE; ++i) {
            printf("%4d", a[1][i]);
        }
    */
    // bubble sort                                         
    // loop to control number of passes                    

    sort(a, stu);
    puts("\nData items in ascending order");
    int x;
    for (x = 0; x < 10; x++)
    {
        a[x][4] = i + 1;

    }
    for (j = 0; j < 10; j++)
    {
        a[j][3] = a[j][1] + a[j][1];
    }

    for (j = 0; j < 10; j++)
    {
        a[j][4] = j + 1;
        for (i = 0; i < SIZE; ++i) {
            printf("%4d", a[j][i]);
        }
       printf("\n");
       
    }
  
    printf("\n最高平均成績\n學號：%d\n數學：%d\n計概：%d\n平均：%d\n", a[0][0], a[0][1], a[0][2], a[0][3]);
    printf("\n最低平均成績\n學號：%d\n數學：%d\n計概：%d\n平均：%d\n", a[9][0], a[9][1], a[9][2], a[9][3]);
    printf("\n平均中位數：%d", a[(0 + 9) / 2][3]);
}


void sort(int a[][SIZE], int size)
{
    int hold, pass, i,j;
    for (pass = 1; pass < size; ++pass) {

        // loop to control number of comparisons per pass   
        for (i = 0; i < size - pass; ++i) {

            // compare adjacent elements and swap them if first 
            // element is greater than second element           
            if (a[i][3] < a[i + 1][3]) {
                swap(&a[i][0], &a[i + 1][0]);
                swap(&a[i][1], &a[i + 1][1]);
                swap(&a[i][2], &a[i + 1][2]);
                swap(&a[i][3], &a[i + 1][3]);
            }
        }
    }

}

void swap(int* e1Ptr, int* e2Ptr)
{
    int hold;
    hold = *e1Ptr;
    *e1Ptr = *e2Ptr;
    *e2Ptr = hold;
}
